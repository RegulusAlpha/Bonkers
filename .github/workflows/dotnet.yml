name: .NET

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    - name: Restore dependencies
      if: github.ref != 'refs/heads/DEV'
      run: dotnet restore

    - name: Build
      if: github.ref != 'refs/heads/DEV'
      run: dotnet build --configuration Release --no-restore

    - name: Test
      if: github.ref != 'refs/heads/DEV'
      run: dotnet test --no-build --verbosity normal

    - name: Publish artifacts
      if: github.ref != 'refs/heads/DEV'
      run: dotnet publish --configuration Release --output ./output

    - name: Create release directory
      if: github.ref != 'refs/heads/DEV'
      run: mkdir -p release  # Create release directory if it doesn't exist
      
    - name: Copy build output to release directory
      if: github.ref != 'refs/heads/DEV'
      run: xcopy /E /I /Y .\output\* release\
      
    - name: List Contents of Release Directory
      if: github.ref != 'refs/heads/DEV'
      run: ls -l ./release  # Verify contents of the release directory

    - name: Archive release directory
      if: github.ref != 'refs/heads/DEV'
      uses: actions/upload-artifact@v3
      with:
        name: release
        path: release

    - name: Create GitHub Release
      if: github.ref != 'refs/heads/DEV'
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUBACCESSTOKEN }}
      with:
        tag_name: v0.1.3
        release_name: Release v0.1.3
        draft: false
        prerelease: false

    # Upload release assets as needed...
    - name: Upload StableCompanion.deps.json
      if: github.ref != 'refs/heads/DEV'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUBACCESSTOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./release/StableCompanion.deps.json
        asset_name: StableCompanion.deps.json
        asset_content_type: application/json

    - name: Upload StableCompanion.dll
      if: github.ref != 'refs/heads/DEV'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUBACCESSTOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./release/StableCompanion.dll
        asset_name: StableCompanion.dll
        asset_content_type: application/octet-stream

    # Repeat the upload steps for other files (Bonkers.exe, Bonkers.pdb, Bonkers.runtimeconfig.json)
    - name: Upload StableCompanion.exe
      if: github.ref != 'refs/heads/DEV'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUBACCESSTOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./release/StableCompanion.exe
        asset_name: StableCompanion.exe
        asset_content_type: application/octet-stream

    - name: Upload StableCompanion.pdb
      if: github.ref != 'refs/heads/DEV'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUBACCESSTOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./release/StableCompanion.pdb
        asset_name: StableCompanion.pdb
        asset_content_type: application/octet-stream

    - name: Upload StableCompanion.runtimeconfig.json
      if: github.ref != 'refs/heads/DEV'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUBACCESSTOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./release/StableCompanion.runtimeconfig.json
        asset_name: StableCompanion.runtimeconfig.json
        asset_content_type: application/json
